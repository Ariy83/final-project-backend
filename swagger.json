{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Tracker of water API docs - OpenAPI 3.1",
    "description": "API documentation for project Tracker of water.",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "servers": [
    {
      "url": "https://final-project-backend-z26e.onrender.com/api",
      "description": "Production server"
    },
    {
      "url": "http://localhost:4000/api",
      "description": "Development server"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "Authorization endpoints"
    },
    {
      "name": "Water-notes",
      "description": "Water-notes endpoints"
    }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "tags": ["Users"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Invalid request body)"
          },
          "409": {
            "description": "Conflict (Email in use)"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["Users"],
        "summary": "User authentication",
        "parameters": [],
        "requestBody": {
          "description": "Authentication's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Invalid request body)"
          },
          "401": {
            "description": "Unauthorized (Email is wrong! || Email not verified! || Password is wrong! Try again!)"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": ["Users"],
        "summary": "Logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "You are logged out"
          },
          "401": {
            "description": "Unauthorized (Not authorized)"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": ["Users"],
        "summary": "Get current user information",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Not authorized)"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/water-rate": {
      "patch": {
        "tags": ["Users"],
        "summary": "Change user's daily norma of water",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "waterRate object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WaterRateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaterRateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Invalid request body)"
          },
          "401": {
            "description": "Unauthorized (Not authorized)"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/update": {
      "patch": {
        "tags": ["Users"],
        "summary": "Update user",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Update user object",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Invalid request body || .exe extension not allowed)"
          },
          "401": {
            "description": "Unauthorized (Not authorized || Incorrect password!)"
          },
          "404": {
            "description": "Not Found (User not found!)"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/water": {
      "post": {
        "tags": ["Water-notes"],
        "summary": "Add water-note",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Water-note object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddWaterRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddWaterResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (missing required waterAmount field || \"waterAmount\" must be a number || \"waterAmount\" must be greater than or equal to 1 || \"waterAmount\" must be less than or equal to 5000 || missing required date field || \"date\" must be a string ||\"date\" with value \"24:00\" fails to match the required pattern: /^(?:[01]?\\d|2[0-3])(?::[0-5]\\d){1,2}$/)"
          },
          "401": {
            "description": "Unauthorized (Not authorized)"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/water/{id}": {
      "put": {
        "tags": ["Water-notes"],
        "summary": "Edit water-note",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "description": "Water-note id"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Water-note object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddWaterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddWaterResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (missing required waterAmount field || \"waterAmount\" must be a number || \"waterAmount\" must be greater than or equal to 1 || \"waterAmount\" must be less than or equal to 5000 || missing required date field || \"date\" must be a string ||\"date\" with value \"24:00\" fails to match the required pattern: /^(?:[01]?\\d|2[0-3])(?::[0-5]\\d){1,2}$/)"
          },
          "401": {
            "description": "Unauthorized (Not authorized)"
          },
          "404": {
            "description": "Not Found (${id} is not valid id)"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "tags": ["Water-notes"],
        "summary": "Delete water-note",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "description": "Water-note id"
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Water deleted"
          },
          "401": {
            "description": "Unauthorized (Not authorized)"
          },
          "404": {
            "description": "Not Found (${id} is not valid id)"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/water/today": {
      "get": {
        "tags": ["Water-notes"],
        "summary": "Get day`s water-notes",
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "required": true,
            "type": "string",
            "description": "Day query",
            "example": "2024-03-21"
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDayWaterResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (\"date\" is required || 'date' must be in the 'yyyy-mm-dd' format)"
          },
          "401": {
            "description": "Unauthorized (Not authorized)"
          },
          "404": {
            "description": "Not Found (User not found)"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/water/month": {
      "get": {
        "tags": ["Water-notes"],
        "summary": "Get month`s water-notes",
        "parameters": [
          {
            "in": "query",
            "name": "month",
            "required": true,
            "type": "integer",
            "description": "Month query",
            "example": "3"
          },
          {
            "in": "query",
            "name": "year",
            "required": true,
            "type": "integer",
            "description": "Year query",
            "example": "2024"
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMonthWaterResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (\"year\" is required || \"month\" is required || \"month\" must be greater than or equal to 1 || \"month\" must be less than or equal to 12 || \"year\" must be greater than or equal to 2024 || \"year\" must be less than or equal to 2100)"
          },
          "401": {
            "description": "Unauthorized (Not authorized)"
          },
          "404": {
            "description": "Not Found (User not found)"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "user": {
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              }
            }
          }
        },
        "example": {
          "user": {
            "email": "user@example.com"
          }
        }
      },
      "AuthenticationResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "token": {
              "type": "string"
            },
            "user": {
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "username": {
                "type": "string",
                "description": "User's name"
              },
              "gender": {
                "type": "string",
                "description": "User's gender"
              },
              "avatarURL": {
                "type": "string",
                "description": "User's avatar URL"
              },
              "waterRate": {
                "type": "integer",
                "description": "User's daily norma of water"
              }
            }
          }
        },
        "example": {
          "token": "eyJhbGciOiJIUzI1NiIsInR5c556IkpXVCJ9.eyJpZCI6I...",
          "user": {
            "email": "Capybara@example.com",
            "username": "Capybara",
            "gender": "male || female",
            "avatarURL": "http://res.cloudinary.com/dooyixxpr/image/upload/v1710857369/avatars/lsxy0ihfqefuywlg9b0o.png",
            "waterRate": "2000"
          }
        }
      },
      "CurrentUserResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "user": {
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "username": {
                "type": "string",
                "description": "User's name"
              },
              "gender": {
                "type": "string",
                "description": "User's gender"
              },
              "avatarURL": {
                "type": "string",
                "description": "User's avatar URL"
              },
              "waterRate": {
                "type": "integer",
                "description": "User's daily norma of water"
              }
            }
          }
        },
        "example": {
          "user": {
            "email": "Capybara@example.com",
            "username": "Capybara",
            "gender": "male || female",
            "avatarURL": "http://res.cloudinary.com/dooyixxpr/image/upload/v1710857369/avatars/lsxy0ihfqefuywlg9b0o.png",
            "waterRate": "2000"
          }
        }
      },
      "WaterRateRequest": {
        "type": "object",
        "required": ["waterRate"],
        "properties": {
          "waterRate": {
            "type": "integer",
            "description": "User's daily norma of water",
            "example": "1500"
          }
        }
      },
      "WaterRateResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "waterRate": {
              "type": "integer",
              "description": "User's daily norma of water",
              "example": "1500"
            }
          }
        },
        "example": {
          "waterRate": "1500"
        }
      },
      "UpdateUserRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's old password"
          },
          "new_password": {
            "type": "string",
            "description": "User's new password"
          },
          "username": {
            "type": "string",
            "description": "User's name"
          },
          "gender": {
            "type": "string",
            "description": "User's gender"
          },
          "avatarURL": {
            "type": "string",
            "description": "User's avatar URL",
            "format": "binary"
          }
        },
        "example": {
          "old_password": "qwerty123",
          "new_password": "qwerty12345",
          "username": "Capybara",
          "gender": "male || female",
          "avatarURL": "http://res.cloudinary.com/dooyixxpr/image/upload/v1710857369/avatars/lsxy0ihfqefuywlg9b0o.png"
        }
      },
      "UpdateUserResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "user": {
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "username": {
                "type": "string",
                "description": "User's name"
              },
              "gender": {
                "type": "string",
                "description": "User's gender",
                "example": "male"
              },
              "avatarURL": {
                "type": "string",
                "description": "User's avatar URL"
              }
            }
          }
        },
        "example": {
          "user": {
            "email": "Capybara@example.com",
            "username": "Capybara",
            "gender": "male || female",
            "avatarURL": "http://res.cloudinary.com/dooyixxpr/image/upload/v1710857369/avatars/lsxy0ihfqefuywlg9b0o.png"
          }
        }
      },
      "AddWaterRequest": {
        "type": "object",
        "required": ["date", "waterAmount"],
        "properties": {
          "date": {
            "type": "string",
            "description": "Time of record water-note",
            "example": "12:21"
          },
          "waterAmount": {
            "type": "integer",
            "description": "Amount of water",
            "example": "250"
          }
        }
      },
      "AddWaterResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "waterAmount": {
              "type": "integer",
              "description": "Amount of water",
              "example": "250"
            },
            "date": {
              "type": "string",
              "description": "Time of record water-note",
              "example": "12:21"
            },
            "owner": {
              "type": "string",
              "description": "Owner of water-note",
              "example": "65fae29587256ea591697177"
            },
            "_id": {
              "type": "string",
              "description": "Id of water-note",
              "example": "65fc0c43e03f046e3d94617d"
            }
          }
        },
        "example": {
          "waterAmount": 350,
          "date": "2024-03-21T10:30:27.422Z",
          "owner": "65fae29587256ea591697177",
          "_id": "65fc0c43e03f046e3d94617d"
        }
      },
      "GetDayWaterResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "waterVolumeSum": {
              "type": "integer",
              "description": "Amount of water",
              "example": "500"
            },
            "waterVolumes": {
              "type": "array",
              "properties": {
                "waterAmount": {
                  "type": "integer",
                  "description": "Amount of water",
                  "example": "300"
                },
                "date": {
                  "type": "string",
                  "description": "Time of record water-note",
                  "example": "2024-03-21T10:21:49.606Z"
                },
                "owner": {
                  "type": "string",
                  "description": "Owner of water-note",
                  "example": "65fae29587256ea591697277"
                },
                "_id": {
                  "type": "string",
                  "description": "Id of water-note",
                  "example": "65fc0a3d04f3dc3c7a472741"
                }
              }
            },
            "waterVolumePercentage": {
              "type": "integer",
              "description": "Fulfillment of the daily norm",
              "example": "25"
            }
          }
        },
        "example": {
          "waterVolumeSum": 500,
          "waterVolumes": [
            {
              "_id": "65fc0a3d04f3dc3c7a472741",
              "waterAmount": 300,
              "date": "2024-03-21T10:21:49.606Z",
              "owner": "65fae29587256ea591697277"
            },
            {
              "_id": "65fc0a6004f3dc3c7a472744",
              "waterAmount": 200,
              "date": "2024-03-21T10:22:24.002Z",
              "owner": "65fae29587256ea591697277"
            }
          ],
          "waterVolumePercentage": 25
        }
      },
      "GetMonthWaterResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "2024-03-21": {
              "type": "object",
              "properties": {
                "date": {
                  "type": "string",
                  "description": "Date of record water-notes",
                  "example": "21, March"
                },
                "portions": {
                  "type": "integer",
                  "description": "Number of portions of water",
                  "example": "5"
                },
                "waterVolumePercentage": {
                  "type": "integer",
                  "description": "Fulfillment of the daily norm",
                  "example": "48"
                },
                "dailyNorma": {
                  "type": "integer",
                  "description": "User's daily norma of water",
                  "example": "2000"
                }
              }
            }
          }
        },
        "example": {
          "2024-03-20": {
            "date": "20, March",
            "portions": 2,
            "waterVolumePercentage": 22,
            "dailyNorma": 2000
          },
          "2024-03-21": {
            "date": "21, March",
            "portions": 5,
            "waterVolumePercentage": 48,
            "dailyNorma": 2000
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
